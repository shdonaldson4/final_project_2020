theme_bw() +
labs(title = "Comparison of Openness across Genders between The Great Britain and India",
x = "country",
y = "Openness to Experience")
aov_boxplot
aov_boxplot <- ggplot(anova_data_wide, aes(x = country, y = O, color = gender)) +
geom_boxplot() +
theme_bw() +
labs(title = "Comparison of Openness across Genders between The Great Britain and India",
x = "country",
y = "Openness to Experience")
aov_boxplot
aov_boxplot <- ggplot(anova_data_wide, aes(x = country, y = O, color = gender)) +
geom_boxplot() +
theme_bw() +
scale_x_discrete(labels = c("Great Britain", "India")) +
labs(title = "Comparison of Openness across Genders between The Great Britain and India",
x = "Country",
y = "Openness to Experience",
color = "Gender")
aov_boxplot
anova_interaction <- anova_data_wide %>%
select(country,gender, O) %>%
ggplot(aes(x = country, color = gender, group = gender, y = O)) +
theme_bw() +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line") +
labs(title = "Interaction of Country and Gender on Openness",
x = "Country",
y = "Openness to Experience",
group = "Gender") +
scale_x_discrete(labels = c("Great Britain", "India"))
anova_interaction
anova_interaction <- anova_data_wide %>%
select(country,gender, O) %>%
ggplot(aes(x = country, color = gender, group = gender, y = O)) +
theme_bw() +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line") +
labs(title = "Interaction of Country and Gender on Openness",
x = "Country",
y = "Openness to Experience") +
legend.title = "Gender" +
scale_x_discrete(labels = c("Great Britain", "India"))
anova_interaction
anova_interaction <- anova_data_wide %>%
select(country,gender, O) %>%
ggplot(aes(x = country, color = gender, group = gender, y = O)) +
theme_bw() +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line") +
scale_x_discrete(labels = c("Great Britain", "India"))
labs(title = "Interaction of Country and Gender on Openness",
x = "Country",
y = "Openness to Experience",
group = "Gender")
anova_interaction <- anova_data_wide %>%
select(country,gender, O) %>%
ggplot(aes(x = country, color = gender, group = gender, y = O)) +
theme_bw() +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line") +
scale_x_discrete(labels = c("Great Britain", "India")) +
labs(title = "Interaction of Country and Gender on Openness",
x = "Country",
y = "Openness to Experience",
group = "Gender")
anova_interaction
install.packages("pandoc-citeproc")
devtools::install_github("jgm/pandoc")
install.packages(c("cli", "colorspace", "gh", "here", "isoband", "lme4", "lubridate", "magrittr", "pillar", "processx", "ps", "rlang", "rmdfiltr", "rprojroot", "rstudioapi", "vctrs", "waldo", "xlsx"))
install.packages(c("cli", "colorspace", "gh", "here", "isoband", "lme4", "lubridate", "magrittr", "pillar", "processx", "ps", "rlang", "rmdfiltr", "rprojroot", "rstudioapi", "vctrs", "waldo", "xlsx"))
install.packages(c("cli", "colorspace", "gh", "here", "isoband", "lme4", "lubridate", "magrittr", "pillar", "processx", "ps", "rlang", "rmdfiltr", "rprojroot", "rstudioapi", "vctrs", "waldo", "xlsx"))
install.packages(c("cli", "colorspace", "gh", "here", "isoband", "lme4", "lubridate", "magrittr", "pillar", "processx", "ps", "rlang", "rmdfiltr", "rprojroot", "rstudioapi", "vctrs", "waldo", "xlsx"))
install.packages(c("cli", "colorspace", "gh", "here", "isoband", "lme4", "lubridate", "magrittr", "pillar", "processx", "ps", "rlang", "rmdfiltr", "rprojroot", "rstudioapi", "vctrs", "waldo", "xlsx"))
# descriptives tables
anova_desc_o <- anova_data_wide %>%
group_by(country,gender) %>%
summarize(mean_o = mean(O), sd_o = sd(O))
# Chunk 1: setup
options(Encoding="UTF-8")
knitr::opts_chunk$set(
eval = T,
echo = FALSE,
fig.height = 7,
fig.width = 8,
message = FALSE,
errors = FALSE,
warnings = FALSE
)
library(scales)
library(tidyverse)
library(rio)
library(here)
library(janitor)
library(papaja)
library(tinytex)
library(knitr)
library(paran)
library(psych)
if(!require(devtools)){
install.packages("devtools")
}
devtools::install_github("rkabacoff/factorAnalysis") #Not on cran
library("papaja")
library(rstatix)
library(ggpubr)
library(kableExtra)
r_refs("r-references.bib")
raw_data = import(here("data", "data.csv"), setclass = "tbl_df")
# Chunk 2: Data-cleaning
#Look at all the variables in the data
h = raw_data %>%
mutate_if(is.integer, as.numeric) %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()+
theme_minimal()
dim(raw_data)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") %>% #retain only males and females
rowwise() %>%
#score variables, r annoted are reverse scored items
mutate(E4r = (6-E4),
E6r = (6-E6),
E8r = (6-E8),
E10r = (6-E10),
N2r = (6-N2),
N4r = (6-N4),
A1r = (6-A1),
A3r = (6-A3),
A5r = (6-A5),
A7r = (6-A7),
C2r = (6-C2),
C4r = (6-C4),
C6r = (6-C6),
C8r = (6-C8),
O2r = (6-O2),
O4r = (6-O4)) %>%
mutate(E = sum(E1, E2, E3,E4r, E5,E6r, E7, E8r, E9, E10r),
N = sum(N1, N2r, N3, N4r, N5, N5, N6, N7, N8, N9, N10),
A = sum(A1r, A2, A3r, A4, A5r, A6, A7r, A8, A9, A10),
C = sum(C1, C2r, C3, C4r, C5, C6r, C7, C8r, C9, C10),
O =sum(O1, O2r, O3, O4r, O5, O6, O7)
)
gender.count = data %>%
group_by(gender) %>%
summarise(gender_count=n())
gender.count[1,2]
# Chunk 3: Descriptives
MeanDF = data %>%
dplyr::select(gender, E:O) %>%
group_by(gender) %>%
summarise(A = mean(A),
C = mean(C),
E = mean(E),
N = mean(N),
O = mean(O)) %>%
pivot_longer(
cols = c(A:O),
names_to =c("variables"),
values_to = "values") %>%
pivot_wider(names_from = gender,
values_from = values)
tDF = data %>%
dplyr::select(E, N, A, C, O, gender) %>%
pivot_longer(-gender, names_to = "variables",  values_to = "value") %>%
group_by(variables) %>%
t_test(value ~ gender) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
E.df = data %>%
dplyr::select(E1, E2, E3,E4r, E5,E6r, E7, E8r, E9, E10r) %>%
mutate_if(is.integer,as.numeric)
N.df = data %>%
dplyr::select(N1, N2r, N3, N4r, N5, N6, N7, N8, N9, N10) %>%
mutate_if(is.integer,as.numeric)
A.df = data %>%
dplyr::select(A1r, A2, A3r, A4, A5r, A6, A7r, A8, A9, A10) %>%
mutate_if(is.integer,as.numeric)
C.df = data %>%
dplyr::select(C1, C2r, C3, C4r, C5, C6r, C7, C8r, C9, C10) %>%
mutate_if(is.integer,as.numeric)
O.df = data %>%
dplyr::select(O1, O2r, O3, O4r, O5, O6, O7) %>%
mutate_if(is.integer,as.numeric)
aDF = c(E = psychometric::alpha(E.df),
N = psychometric::alpha(N.df),
A = psychometric::alpha(A.df),
C = psychometric::alpha(C.df),
O = psychometric::alpha(O.df))
aDF = aDF %>%
as.data.frame() %>%
rownames_to_column(var = "variables") %>%
dplyr::rename(alpha = ".") %>%
as_tibble()
tDF = tDF %>%
select(variables, statistic, p)
# Chunk 4: descriptiveTable
table = dplyr::inner_join(MeanDF, tDF, by="variables")
dplyr::left_join(table, aDF, by="variables") %>%
dplyr::rename(t ="statistic") %>%
apa_table(align = "c", caption = "Summary statistics", note = "E = Extraversion, N = Neuroticism, A = Agreeableness, C = Conscientiousness, O = Openness/Intellect, t = t statistic value, p =p values for corresponding t values, a = Chronbach's alpha" )
# Chunk 5: errorbars
fig.bg5 = data %>%
dplyr::select(E, N, A, C, O, gender) %>%
group_by(gender) %>%
summarise_all(., .funs = c(mean, sd)) %>%   pivot_longer(cols = E_fn1:O_fn2,
names_to =c("var", "funs"),
names_pattern = "(.*)_(.*)",
values_to = "values",
) %>%
mutate_if(is.character, as.factor) %>%
mutate(funs = recode(funs,
fn1 = "mean",
fn2 = "sd")) %>%
pivot_wider(names_from = funs,
values_from = values) %>%
mutate(var = factor(var, levels=c("E", "N", "A", "C", "O"))) %>%
ggplot(aes(x=var, color = gender))+
geom_errorbar(aes(ymin=mean - sd, ymax=mean+sd), width=.2,           position=position_dodge(.9))+
labs(x = "Big 5 variables",
y = "Values",
color = "Gender")+
jtools::theme_apa(remove.y.gridlines = FALSE, remove.x.gridlines = FALSE, legend.use.title = TRUE, legend.pos = "topright")
fig.bg5
# Chunk 6: PCA.data
PCA.data = data %>%
select(E1, E2, E3,E4r, E5,E6r, E7, E8r, E9, E10r,
N1, N2r, N3, N4r, N5, N5, N6, N7, N8, N9, N10,
A1r, A2, A3r, A4, A5r, A6, A7r, A8, A9, A10,
C1, C2r, C3, C4r, C5, C6r, C7, C8r, C9, C10,
O1, O2r, O3, O4r, O5, O6, O7)
# Chunk 7: parallel-analysis
factorAnalysis::screePlot(cor(PCA.data), method="pc", n.obs=nrow(PCA.data))
# Chunk 8: Rotations
##Varimax rotation
R.var = principal(PCA.data, nfactors = 7, rotate = "varimax", normalize = T) #Kaiser normalization will be applied
raw_var = fa.sort(R.var)
df_var = data.frame(unclass(raw_var$loadings))
#write.xlsx(df_var, file = "Rotation outputs.xlsx", row.names = TRUE, sheetName = "varimax", append = FALSE)
##Oblimin rotation
R.ob = principal(PCA.data, nfactors = 7, rotate = "oblimin", normalize = T)
struc.mat = R.ob$loadings %*%R.ob$Phi #multiplying the pattern matrix with the covariance matrix from the rotated factors
df_obl = fa.sort(struc.mat)#Interpreting the Structure matrix
#write.xlsx(df_obl, file = "Rotation outputs.xlsx", row.names = TRUE, sheetName = "oblimin", append = TRUE)
# Chunk 9: varimaxTable
df_var%>%
apa_table(align = "c", caption = "Varimax rotation loadings matrix", font_size = "tiny", note = "E = Extraversion, N = Neuroticism, A = Agreeableness, C = Conscientiousness, O = Openness/Intellect", added_stub_head = "Items")
# Chunk 10: obliminTable
df_obl %>%
apa_table(align = "c", caption = "Oblimin rotation loadings matrix", font_size = "tiny", note = "E = Extraversion, N = Neuroticism, A = Agreeableness, C = Conscientiousness, O = Openness/Intellect", added_stub_head = "Items")
anova_data_wide = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country %in% c("GB", "IN"), age >=18 & age <= 80) %>%   #Use ONLY Great Britain and India cases, and age between 18 and 80 years
mutate(country = as.factor(country)) %>%
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") %>% #retain only males and females
mutate(gender = as.factor(gender)) %>%
select(c(age,country,gender,O1:O10)) %>%
rowwise() %>%
#score variables, r annoted are reverse scored items
mutate(O2r = (6-O2),
O4r = (6-O4)) %>%
mutate(O =sum(O1, O2r, O3, O4r, O5, O6, O7)) %>%
select(age,country,gender, O)
# descriptives tables
anova_desc_o <- anova_data_wide %>%
group_by(country,gender) %>%
summarize(mean_o = mean(O), sd_o = sd(O))
aov_means <- anova_data_wide %>%
group_by(country, gender) %>%
get_summary_stats(O, type = "mean_sd")
aov_means
aov_means <- anova_data_wide %>%
group_by(country, gender) %>%
get_summary_stats(O, type = "mean_sd") %>%
select(-variable)
aov_means
aov_means %>%
apa_table(align = "c",
caption = "Summary Table for Openness Scores by Country and Gender",
note = "GB = Great Britain, IN = India")
aov_means <- anova_data_wide %>%
group_by(country, gender) %>%
get_summary_stats(O, type = "mean_sd") %>%
select(-variable) %>%
apa_table(align = "c",
caption = "Summary Table for Openness Scores by Country and Gender",
note = "GB = Great Britain, IN = India")
aov_means
aov_means_g <- anova_data_wide %>%
get_summary_stats(O, type = "mean_sd") %>%
select(-variable) %>%
apa_table(align = "c",
caption = "Summary Table for Openness Scores by Country and Gender",
note = "GB = Great Britain, IN = India")
aov_means_g
summary(anovaR)
# ANOVA Analysis
anovaR <- aov(O ~ country + gender + gender*country, data = anova_data_wide)
summary(anovaR)
country_means <- anova_data_wide %>%
group_by(country) %>%
mean(GBmean = mean(O), INmean = mean(O), na.rm = TRUE)
country_means <- anova_data_wide %>%
group_by(country) %>%
mean(c_mean = mean(O), na.rm = TRUE)
country_means
anova_data_wide
country_means <- anova_data_wide %>%
group_by(country) %>%
mean(c_mean = mean(O))
country_means <- anova_data_wide %>%
group_by(country) %>%
summarize(mean(c_mean = mean(O)))
country_means
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender), funs(mean(O, na.rm=TRUE)))
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender), mean(O, na.rm=TRUE))
anova_data_wide = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country %in% c("GB", "IN"), age >=18 & age <= 80) %>%   #Use ONLY Great Britain and India cases, and age between 18 and 80 years
mutate(country = as.factor(country)) %>%
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") %>% #retain only males and females
mutate(gender = as.factor(gender)) %>%
select(c(age,country,gender,O1:O10)) %>%
rowwise() %>%
#score variables, r annoted are reverse scored items
mutate(O2r = (6-O2),
O4r = (6-O4)) %>%
mutate(O =sum(O1, O2r, O3, O4r, O5, O6, O7)) %>%
select(age,country,gender, O)
# descriptives tables
anova_desc_o <- anova_data_wide %>%
group_by(country,gender) %>%
summarize(mean_o = mean(O), sd_o = sd(O))
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender), mean(O, na.rm=TRUE))
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender), mean(anova_data_wide$O, na.rm=TRUE))
country_means
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender, -age), mean(anova_data_wide$O, na.rm=TRUE))
country_means
GBmean <- country_means[1, "O"]
GBmean
INmean <- country_means[2, "O"]
IMmean
INmean
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country, -age),
mean(anova_data_wide$O, na.rm=TRUE))
gender_means
gender_means
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country, -age),
mean(anova_data_wide$O, na.rm=TRUE))
gender_means
##group means
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender, -age),
mean(anova_data_wide$O, na.rm=TRUE))
country_means
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country, -age),
mean(anova_data_wide$O, na.rm=TRUE))
gender_means
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country), funs(mean(., na.rm=TRUE)))
gender_means
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country), funs(mean(., na.rm=TRUE)))
gender_means
fem_mean <- gender_means[1, "O"]
fem_mean
male_mean <- gender_means[2, "O"]
male_mean
mean_age <- mean(anova_data_wide$age)
mean_age
anova_data_wide
anova_data_wide = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country %in% c("GB", "IN"), age >=18 & age <= 80) %>%   #Use ONLY Great Britain and India cases, and age between 18 and 80 years
mutate(country = as.factor(country)) %>%
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") %>% #retain only males and females
mutate(gender = as.factor(gender)) %>%
select(c(age,country,gender,O1:O10)) %>%
rowwise() %>%
#score variables, r annoted are reverse scored items
mutate(O2r = (6-O2),
O4r = (6-O4)) %>%
mutate(O =sum(O1, O2r, O3, O4r, O5, O6, O7)) %>%
select(age,country,gender, O)
##group means
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender), funs(mean(., na.rm=TRUE)))
country_means
# descriptives tables
aov_gender.count = anova_data_wide %>%
group_by(gender) %>%
summarise(gender_count=n())
gender.count[1,2]
# descriptives tables
aov_gender.count = anova_data_wide %>%
group_by(gender) %>%
summarise(gender_count=n())
aov_gender.count[1,2]
gender.count = data %>%
group_by(gender) %>%
summarise(gender_count=n())
gender.count[1,2]
aov_gender.count
aov_country.count = anova_data_wide %>%
group_by(count) %>%
summarise(country_count=n())
aov_country.count = anova_data_wide %>%
group_by(country) %>%
summarise(country_count=n())
aov_country.count
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country), funs(mean(., na.rm=TRUE)),
funs(sd(., na.rm=TRUE)))
gender_means
country_means <- anova_data_wide %>%
group_by(country) %>%
get_summary_stats(O, type = "mean_sd")
country_means
country_means <- anova_data_wide %>%
group_by(country) %>%
get_summary_stats(O, type = "mean_sd")
country_means
GBmean <- country_means[1, "mean"]
GBmean
INmean <- country_means[2, "mean"]
INmean
GB_sd <- country_means[1, "sd"]
GB_sd
IN_sd <- country_means[2, "sd"]
IN_sd
gender_means <- anova_data_wide %>%
group_by(gender) %>%
get_summary_stats(O, type = "mean_sd")
gender_means
fem_mean <- gender_means[1, "mean"]
fem_mean
male_mean <- gender_means[2, "mean"]
male_mean
fem_sd <- gender_means[1, "sd"]
fem_sd
male_sd <- gender_means[2, "sd"]
male_sd
# ANOVA Analysis
anovaR <- aov(O ~ country + gender + gender*country, data = anova_data_wide)
summary(anovaR)
country_fstat <- unname(summary(anovaR)$fstatistic[1])
country_fstat
country_fstat <- anovaR[1, "F value"])
country_fstat
country_fstat <- anovaR[1, "F value"]
country_fstat
anovaR
country_fstat <- summary(anovaR)[1, "F value"]
anova_results$table
library(car)
sstable <- Anova(anovaR, type = 3)
sstable
sstable <- Anova(anovaR)
sstable
sstable <- Anova(anovaR, type = 3)
sstable
# ANOVA Analysis
anovaR <- aov(O ~ gender*country, data = anova_data_wide)
summary(anovaR)
sstable <- Anova(anovaR, type = 3)
sstable
sstable <- Anova(anovaR, type = 3)
sstable
# ANOVA Table
anova_results <- apa_print(sstable, es = "pes")
anovaR_p <- apa_print(sstable, es = "pes", in_paren = TRUE)
apa_table(sstable,
align = c("l", "r", "c", "r", "r", "r"),
caption = "ANOVA table for Openness by Country and Gender")
View(data)
View(data)
