filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") %>% #retain only males and females
mutate(gender = as.factor(gender)) %>%
select(c(age,country,gender,O1:O10)) %>%
rowwise() %>%
#score variables, r annoted are reverse scored items
mutate(O2r = (6-O2),
O4r = (6-O4)) %>%
mutate(O =sum(O1, O2r, O3, O4r, O5, O6, O7)) %>%
select(age,country,gender, O)
# descriptives tables
anova_desc_o <- anova_data_wide %>%
group_by(country,gender) %>%
summarize(mean_o = mean(O), sd_o = sd(O))
aov_means <- anova_data_wide %>%
group_by(country, gender) %>%
get_summary_stats(O, type = "mean_sd")
aov_means
aov_means <- anova_data_wide %>%
group_by(country, gender) %>%
get_summary_stats(O, type = "mean_sd") %>%
select(-variable)
aov_means
aov_means %>%
apa_table(align = "c",
caption = "Summary Table for Openness Scores by Country and Gender",
note = "GB = Great Britain, IN = India")
aov_means <- anova_data_wide %>%
group_by(country, gender) %>%
get_summary_stats(O, type = "mean_sd") %>%
select(-variable) %>%
apa_table(align = "c",
caption = "Summary Table for Openness Scores by Country and Gender",
note = "GB = Great Britain, IN = India")
aov_means
aov_means_g <- anova_data_wide %>%
get_summary_stats(O, type = "mean_sd") %>%
select(-variable) %>%
apa_table(align = "c",
caption = "Summary Table for Openness Scores by Country and Gender",
note = "GB = Great Britain, IN = India")
aov_means_g
summary(anovaR)
# ANOVA Analysis
anovaR <- aov(O ~ country + gender + gender*country, data = anova_data_wide)
summary(anovaR)
country_means <- anova_data_wide %>%
group_by(country) %>%
mean(GBmean = mean(O), INmean = mean(O), na.rm = TRUE)
country_means <- anova_data_wide %>%
group_by(country) %>%
mean(c_mean = mean(O), na.rm = TRUE)
country_means
anova_data_wide
country_means <- anova_data_wide %>%
group_by(country) %>%
mean(c_mean = mean(O))
country_means <- anova_data_wide %>%
group_by(country) %>%
summarize(mean(c_mean = mean(O)))
country_means
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender), funs(mean(O, na.rm=TRUE)))
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender), mean(O, na.rm=TRUE))
anova_data_wide = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country %in% c("GB", "IN"), age >=18 & age <= 80) %>%   #Use ONLY Great Britain and India cases, and age between 18 and 80 years
mutate(country = as.factor(country)) %>%
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") %>% #retain only males and females
mutate(gender = as.factor(gender)) %>%
select(c(age,country,gender,O1:O10)) %>%
rowwise() %>%
#score variables, r annoted are reverse scored items
mutate(O2r = (6-O2),
O4r = (6-O4)) %>%
mutate(O =sum(O1, O2r, O3, O4r, O5, O6, O7)) %>%
select(age,country,gender, O)
# descriptives tables
anova_desc_o <- anova_data_wide %>%
group_by(country,gender) %>%
summarize(mean_o = mean(O), sd_o = sd(O))
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender), mean(O, na.rm=TRUE))
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender), mean(anova_data_wide$O, na.rm=TRUE))
country_means
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender, -age), mean(anova_data_wide$O, na.rm=TRUE))
country_means
GBmean <- country_means[1, "O"]
GBmean
INmean <- country_means[2, "O"]
IMmean
INmean
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country, -age),
mean(anova_data_wide$O, na.rm=TRUE))
gender_means
gender_means
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country, -age),
mean(anova_data_wide$O, na.rm=TRUE))
gender_means
##group means
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender, -age),
mean(anova_data_wide$O, na.rm=TRUE))
country_means
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country, -age),
mean(anova_data_wide$O, na.rm=TRUE))
gender_means
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country), funs(mean(., na.rm=TRUE)))
gender_means
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country), funs(mean(., na.rm=TRUE)))
gender_means
fem_mean <- gender_means[1, "O"]
fem_mean
male_mean <- gender_means[2, "O"]
male_mean
mean_age <- mean(anova_data_wide$age)
mean_age
anova_data_wide
anova_data_wide = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country %in% c("GB", "IN"), age >=18 & age <= 80) %>%   #Use ONLY Great Britain and India cases, and age between 18 and 80 years
mutate(country = as.factor(country)) %>%
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") %>% #retain only males and females
mutate(gender = as.factor(gender)) %>%
select(c(age,country,gender,O1:O10)) %>%
rowwise() %>%
#score variables, r annoted are reverse scored items
mutate(O2r = (6-O2),
O4r = (6-O4)) %>%
mutate(O =sum(O1, O2r, O3, O4r, O5, O6, O7)) %>%
select(age,country,gender, O)
##group means
country_means <- anova_data_wide %>%
group_by(country) %>%
summarise_at(vars(-gender), funs(mean(., na.rm=TRUE)))
country_means
# descriptives tables
aov_gender.count = anova_data_wide %>%
group_by(gender) %>%
summarise(gender_count=n())
gender.count[1,2]
# descriptives tables
aov_gender.count = anova_data_wide %>%
group_by(gender) %>%
summarise(gender_count=n())
aov_gender.count[1,2]
gender.count = data %>%
group_by(gender) %>%
summarise(gender_count=n())
gender.count[1,2]
aov_gender.count
aov_country.count = anova_data_wide %>%
group_by(count) %>%
summarise(country_count=n())
aov_country.count = anova_data_wide %>%
group_by(country) %>%
summarise(country_count=n())
aov_country.count
gender_means <- anova_data_wide %>%
group_by(gender) %>%
summarise_at(vars(-country), funs(mean(., na.rm=TRUE)),
funs(sd(., na.rm=TRUE)))
gender_means
country_means <- anova_data_wide %>%
group_by(country) %>%
get_summary_stats(O, type = "mean_sd")
country_means
country_means <- anova_data_wide %>%
group_by(country) %>%
get_summary_stats(O, type = "mean_sd")
country_means
GBmean <- country_means[1, "mean"]
GBmean
INmean <- country_means[2, "mean"]
INmean
GB_sd <- country_means[1, "sd"]
GB_sd
IN_sd <- country_means[2, "sd"]
IN_sd
gender_means <- anova_data_wide %>%
group_by(gender) %>%
get_summary_stats(O, type = "mean_sd")
gender_means
fem_mean <- gender_means[1, "mean"]
fem_mean
male_mean <- gender_means[2, "mean"]
male_mean
fem_sd <- gender_means[1, "sd"]
fem_sd
male_sd <- gender_means[2, "sd"]
male_sd
# ANOVA Analysis
anovaR <- aov(O ~ country + gender + gender*country, data = anova_data_wide)
summary(anovaR)
country_fstat <- unname(summary(anovaR)$fstatistic[1])
country_fstat
country_fstat <- anovaR[1, "F value"])
country_fstat
country_fstat <- anovaR[1, "F value"]
country_fstat
anovaR
country_fstat <- summary(anovaR)[1, "F value"]
anova_results$table
library(car)
sstable <- Anova(anovaR, type = 3)
sstable
sstable <- Anova(anovaR)
sstable
sstable <- Anova(anovaR, type = 3)
sstable
# ANOVA Analysis
anovaR <- aov(O ~ gender*country, data = anova_data_wide)
summary(anovaR)
sstable <- Anova(anovaR, type = 3)
sstable
sstable <- Anova(anovaR, type = 3)
sstable
# ANOVA Table
anova_results <- apa_print(sstable, es = "pes")
anovaR_p <- apa_print(sstable, es = "pes", in_paren = TRUE)
apa_table(sstable,
align = c("l", "r", "c", "r", "r", "r"),
caption = "ANOVA table for Openness by Country and Gender")
View(data)
View(data)
install.packages("ps")
# Chunk 1: setup
options(Encoding="UTF-8")
knitr::opts_chunk$set(
eval = T,
echo = FALSE,
fig.height = 7,
fig.width = 8,
message = FALSE,
errors = FALSE,
warnings = FALSE
)
library(scales)
library(tidyverse)
library(rio)
library(here)
library(janitor)
library(papaja)
library(tinytex)
library(knitr)
library(paran)
library(psych)
if(!require(devtools)){
install.packages("devtools")
}
devtools::install_github("rkabacoff/factorAnalysis") #Not on cran
library("papaja")
library(rstatix)
library(ggpubr)
library(car)
r_refs("r-references.bib")
raw_data = import(here("data", "data.csv"), setclass = "tbl_df")
#Look at all the variables in the data
h = raw_data %>%
mutate_if(is.integer, as.numeric) %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()+
theme_minimal()
dim(raw_data)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
gender = factor(gender)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
gender = factor(raw_data$gender)
# Chunk 1: setup
options(Encoding="UTF-8")
knitr::opts_chunk$set(
eval = T,
echo = FALSE,
fig.height = 7,
fig.width = 8,
message = FALSE,
errors = FALSE,
warnings = FALSE
)
library(scales)
library(tidyverse)
library(rio)
library(here)
library(janitor)
library(papaja)
library(tinytex)
library(knitr)
library(paran)
library(psych)
if(!require(devtools)){
install.packages("devtools")
}
devtools::install_github("rkabacoff/factorAnalysis") #Not on cran
library("papaja")
library(rstatix)
library(ggpubr)
library(car)
r_refs("r-references.bib")
raw_data = import(here("data", "data.csv"), setclass = "tbl_df")
#Look at all the variables in the data
h = raw_data %>%
mutate_if(is.integer, as.numeric) %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()+
theme_minimal()
dim(raw_data)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
gender = factor(raw_data$gender)
levels(data$gender)
gender <- as.factor(raw_data$gender)
levels(data$gender)
gender <- as.factor(raw_data$'gender')
levels(data$gender)
gender <- factorize(raw_data$gender)
levels(data$gender)
raw_data$gender
min(raw_data$gender)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0))  #dropping all rows with missing values
mutate(gender = factorize(gender))
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = factorize(gender))
levels(data$gender)
View(raw_data)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = as.factor(gender))
gender <- factorize(raw_data$gender)
levels(data$gender)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = as.factor(gender)) %>%
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") #retain only males and females
levels(data$gender)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = as.factor(gender)) %>%
data2 <- data %>%
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") #retain only males and females
levels(data$gender)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = as.factor(gender)) %>%
data2 <- data %>%
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") #retain only males and females
levels(data2$gender)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = as.factor(gender)) %>%
data2 <- data %>%
mutate(new_gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") #retain only males and females
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = as.factor(gender)) %>%
data2 <- data %>%
mutate(new_gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") #retain only males and females
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = as.factor(gender)) %>%
data2 <- data %>%
dplyr::mutate(new_gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") #retain only males and females
View(data)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = as.factor(gender)) %>%
data2 <- data %>%
# mutate(new_gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "3") #retain only males and females
levels(data2$gender)
levels(data$gender)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = as.factor(gender)) %>%
data2 <- data %>%
# mutate(new_gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "3") #retain only males and females
data2 <- data %>%
# mutate(new_gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "3") #retain only males and females
levels(data$gender)
levels(data2$gender)
data2 <- data %>%
# mutate(new_gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "3") #retain only males and females
levels(data2$gender)
anova_data_wide = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country %in% c("GB", "IN"), age >=18 & age <= 80) %>%   #Use ONLY Great Britain and India cases, and age between 18 and 80 years
mutate(country = as.factor(country)) %>%
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") %>% #retain only males and females
mutate(gender = as.factor(gender)) %>%
select(c(age,country,gender,O1:O10)) %>%
rowwise() %>%
#score variables, r annoted are reverse scored items
mutate(O2r = (6-O2),
O4r = (6-O4)) %>%
mutate(O =sum(O1, O2r, O3, O4r, O5, O6, O7)) %>%
select(age,country,gender, O)
data2 <- data %>%
# mutate(new_gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender %in% c("1", "2")) #retain only males and females
levels(data2$gender)
#final data to be used
data = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country == "US", age >=18 & age <= 80 ) %>%  #Use ONLY US cases, and age between 18 and 80 years
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = recode(gender,
`1` = "Male",
`2` = "Female",
`3` = "Other")) %>%
filter(gender != "Other") %>% #retain only males and females
mutate(gender = as.factor(gender))
anova_data_wide = raw_data %>%
dplyr::select(-c(race,engnat,hand,source)) %>%  #retain only those columns required for the analysis
filter(country %in% c("GB", "IN"), age >=18 & age <= 80) %>%   #Use ONLY Great Britain and India cases, and age between 18 and 80 years
mutate(country = as.factor(country)) %>%
filter_if(is.numeric, all_vars((.) != 0)) %>%  #dropping all rows with missing values
mutate(gender = as.factor(gender)) %>%
mutate(gender = recode(gender, `1` = "Male", `2` = "Female", `3` = "Other")) %>%
filter(gender != "Other") %>% #retain only males and females
select(c(age,country,gender,O1:O10)) %>%
rowwise() %>%
#score variables, r annoted are reverse scored items
mutate(O2r = (6-O2),
O4r = (6-O4)) %>%
mutate(O =sum(O1, O2r, O3, O4r, O5, O6, O7)) %>%
select(age,country,gender, O)
